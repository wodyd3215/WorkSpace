<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
  <!-- settings : mybatis구동시 선언할 설정들을 작성하는 영역 -->
  <settings>
    <!-- 만약 null로 데이터가 전달되었다면 빈칸이 아닌 null로 인식해라 -->
    <setting name="jdbcTypeForNull" value="NULL"/>
  </settings>
  
  <typeAliases>
  	<typeAlias type="com.kh.mybatis.member.model.vo.Member" alias="Member" />
  </typeAliases>
  
  <!-- environments : mybatis에서 연동할 db정보들을 등록하는 영역 -->
  <environments default="development">
    <environment id="development">
      <!-- 
      		transactionManager : JDBC와 MANAGED 둘 중 하나의 타입을 설정할 수 있음
      		- JDBC : 트랜잭션을 내가 직접 관리(수동 commit)
      		- MANAGED : 트랜잭션에 대해서 어떠한 영향도 행사하지 않겠다.(자동 commit) 
      -->
      <transactionManager type="JDBC"/>
      <!-- 
      		dataSource : POOLED와 UNPOOLED 둘 중 하나의 타입을 선택할 수 있음(ConnectionPool 사용여부)
      		* ConnectionPool : db서버에 연결하기 위해 사용한 Connection 객체를 반납하지 않고 
      		   				   ConnectionPool 공간에 보관하여 요청이 왔을 때 Pool에서 보관해 두었던
      		   				   Connection 객체를 재사용할 수 있도록 만든 구조
      		   				   즉, Pool안에 보관된 Connection객체들이 모두 사용되기 전에는 
      		   				   새로운 Connection 객체를 생성할 필요가 없어진다.
       -->
      <dataSource type="POOLED">
        <property name="driver" value="oracle.jdbc.driver.OracleDriver"/>
        <property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
        <property name="username" value="MYBATIS"/>
        <property name="password" value="MYBATIS"/>
      </dataSource>
    </environment>
  </environments>
  
  <!-- mappers : 실행할 sql문들을 기록해둔 mapper파일들을 등록하는 영역 -->
  <mappers>
    <mapper resource="/mappers/member-mapper.xml"/>
  </mappers>
</configuration>